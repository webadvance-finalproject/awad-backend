// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model Account {
//   id        Int    @id @default(autoincrement())
//   username  String @unique
//   password  String
//   user      User? 
//   createAt DateTime @default(now())
//   updateAt DateTime @updatedAt
// }

// model User {
//   id        Int      @id @default(autoincrement())
//   firstName String
//   lastName  String
//   account   Account? @relation(fields: [accountId], references: [id]) // Keep the relation on this side
//   accountId Int?     @unique
//   createAt DateTime @default(now())
//   updateAt DateTime @updatedAt
// }
model Favorite{
  userID String
  moviedID String
  @@id([userID, moviedID])
}

model Search_History {
  searchHistoryID String @id @default(uuid())
  userID  String
  ressultCount  Int @default(0)
  queryText String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  searchClicks    Search_Click[]
}

model Search_Click {
  movieID  String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  searchHistory   Search_History @relation(fields: [searchHistoryID], references: [searchHistoryID])
  searchHistoryID String  
  @@id([searchHistoryID, movieID])
}